{"version":3,"file":"static/js/647.1ce4ff3b.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 300px;\n  margin: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 15px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 15px;\n  background-color: lightblue;\n  font-size: 16px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Input } from './ContactsForm.styled';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nconst ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n\n    const isExist = contacts.some(contact => contact.name === name);\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n      <label htmlFor=\"number\">Number</label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactsForm;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  list-style-type: none;\n  margin-top: 20px;\n  padding: 0;\n  margin: 20px;\n`;\n\nexport const Li = styled.li`\n  width: 300px;\n  height: 40px;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid black;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 7px;\n  border: 1px solid black;\n  border-radius: 15px;\n  background-color: lightblue;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Li, Ul } from './ContactsList.styled';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleClick = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <Ul>\n      {contacts &&\n        contacts.map(contact => (\n          <Li key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button type=\"button\" onClick={() => handleClick(contact.id)}>\n              Delete\n            </Button>\n          </Li>\n        ))}\n    </Ul>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  margin: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 300px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 15px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Div, Input } from './Filter.styled';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Div>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <Input type=\"text\" name=\"filter\" onChange={handleInputChange} />\n    </Div>\n  );\n};\n\nexport default Filter;\n","import ContactsForm from 'components/ContactsForm/ContactsForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../../redux/root/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h1>Contacts</h1>\n      <Filter />\n      {isLoading && !error && <p>Loading...</p>}\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","selectContacts","state","contacts","items","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","preventDefault","target","elements","value","number","some","alert","concat","addContact","reset","children","_jsx","htmlFor","type","pattern","required","Ul","Li","map","onClick","id","deleteContact","Div","onChange","setFilter","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","_Fragment","ContactsForm","Filter","ContactsList"],"sourceRoot":""}